/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grafos;

import java.io.File;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

public class Principal extends javax.swing.JFrame {

    Grafo grafo = null;
    MeusAlgoritmos carregar = new MeusAlgoritmos();

    public Principal() {
        initComponents();
        btnBuscaLargura.setEnabled(false);
        btnAgm.setEnabled(false);
        btnBuscaProfundidade.setEnabled(false);
        btnCaminhoMinimo.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCarregar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cbCarregarGrafo = new javax.swing.JComboBox<>();
        btnBuscaLargura = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cbLargura = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cbProfundidade = new javax.swing.JComboBox<>();
        btnBuscaProfundidade = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cbOrigemCaminho = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        btnCaminhoMinimo = new javax.swing.JButton();
        btnAgm = new javax.swing.JButton();
        cbDestinoCaminho = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Grafos");
        setLocation(new java.awt.Point(0, 0));

        btnCarregar.setText("Carregar");
        btnCarregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarActionPerformed(evt);
            }
        });

        jLabel1.setText("Tipo de grafo a ser carregado:");

        cbCarregarGrafo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Matriz de Adjacência", "Lista de Adjacência", "Matriz de Incidência" }));

        btnBuscaLargura.setText("Buscar em Largura");
        btnBuscaLargura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaLarguraActionPerformed(evt);
            }
        });

        jLabel2.setText("Vértice de origem:");

        cbLargura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Carregue o gráfico" }));
        cbLargura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLarguraActionPerformed(evt);
            }
        });

        jLabel3.setText("Vértice de origem:");

        cbProfundidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Carregue o gráfico" }));

        btnBuscaProfundidade.setText("Buscar em Profundidade");
        btnBuscaProfundidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaProfundidadeActionPerformed(evt);
            }
        });

        jLabel4.setText("Origem:");

        cbOrigemCaminho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Carregue o gráfico" }));

        jLabel5.setText("Destino:");

        btnCaminhoMinimo.setText("Gerar caminho mínimo");
        btnCaminhoMinimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaminhoMinimoActionPerformed(evt);
            }
        });

        btnAgm.setText("Gerar AGM");
        btnAgm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgmActionPerformed(evt);
            }
        });

        cbDestinoCaminho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Carregue o gráfico" }));

        txtArea.setEditable(false);
        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane1.setViewportView(txtArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(73, 73, 73)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(cbOrigemCaminho, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbLargura, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbCarregarGrafo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbProfundidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbDestinoCaminho, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(btnCaminhoMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(btnBuscaLargura, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                                    .addComponent(btnCarregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addComponent(btnBuscaProfundidade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(btnAgm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addContainerGap(268, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbCarregarGrafo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCarregar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscaLargura)
                    .addComponent(jLabel2)
                    .addComponent(cbLargura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbProfundidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscaProfundidade))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbOrigemCaminho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbDestinoCaminho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnCaminhoMinimo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAgm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(804, 566));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregarActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Procurar arquivo");

        int retorno = fileChooser.showOpenDialog(this);

        if (retorno == JFileChooser.APPROVE_OPTION) {

            File caminho = fileChooser.getSelectedFile();

            try {

                switch (cbCarregarGrafo.getSelectedIndex()) {
                    case 0:
                        grafo = carregar.carregarGrafo(caminho.getPath(), TipoDeRepresentacao.MATRIZ_DE_ADJACENCIA);
                        break;
                    case 1:
                        grafo = carregar.carregarGrafo(caminho.getPath(), TipoDeRepresentacao.LISTA_DE_ADJACENCIA);
                        break;
                    default:
                        grafo = carregar.carregarGrafo(caminho.getPath(), TipoDeRepresentacao.MATRIZ_DE_INCIDENCIA);
                        break;
                }
                grafo.vertices();
                cbLargura.removeAllItems();
                for (int i = 0; i < carregar.getListaVertice().size(); i++) {
                    cbLargura.addItem(Integer.toString(carregar.getListaVertice().get(i).id()));
                }

                grafo.vertices();
                cbDestinoCaminho.removeAllItems();
                for (int i = 0; i < carregar.getListaVertice().size(); i++) {
                    cbDestinoCaminho.addItem(Integer.toString(carregar.getListaVertice().get(i).id()));
                }

                grafo.vertices();
                cbOrigemCaminho.removeAllItems();
                for (int i = 0; i < carregar.getListaVertice().size(); i++) {
                    cbOrigemCaminho.addItem(Integer.toString(carregar.getListaVertice().get(i).id()));
                }

                grafo.vertices();
                cbProfundidade.removeAllItems();
                for (int i = 0; i < carregar.getListaVertice().size(); i++) {
                    cbProfundidade.addItem(Integer.toString(carregar.getListaVertice().get(i).id()));
                }

                btnBuscaLargura.setEnabled(true);
                btnAgm.setEnabled(true);
                btnBuscaProfundidade.setEnabled(true);
                btnCaminhoMinimo.setEnabled(true);

            } catch (Exception ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_btnCarregarActionPerformed

    private void btnCaminhoMinimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaminhoMinimoActionPerformed
        LinkedList<Aresta> caminhoMinimo = new LinkedList<>();
        carregar = new MeusAlgoritmos();
        caminhoMinimo.addAll(carregar.caminhoMaisCurto(grafo, new Vertice(cbOrigemCaminho.getSelectedIndex()), new Vertice(cbDestinoCaminho.getSelectedIndex())));
        String resultado = new String();

        resultado = ("Caminho mínimo: \n");
        for (int i = 0; i < caminhoMinimo.size(); i++) {
            System.out.println(" "+caminhoMinimo.get(i).origem().id()+" "+caminhoMinimo.get(i).destino().id());
            resultado = resultado.concat("\nOrigem: " + caminhoMinimo.get(i).origem().id() + " Destino: " + caminhoMinimo.get(i).destino().id());
        }

        txtArea.setText(resultado);
    }//GEN-LAST:event_btnCaminhoMinimoActionPerformed

    private void btnAgmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgmActionPerformed
        LinkedList<Aresta> arvoreGeradora = new LinkedList<>();
        carregar = new MeusAlgoritmos();
        arvoreGeradora.addAll(carregar.agmUsandoKruskall(grafo));
        String resultado = new String();

        resultado = ("Arvore geradora mínima: \n");
        for (int i = 0; i < arvoreGeradora.size(); i++) {
            resultado = resultado.concat("\nOrigem: " + arvoreGeradora.get(i).origem().id() + " Destino: " + arvoreGeradora.get(i).destino().id());
     
   }

        txtArea.setText(resultado);
    }//GEN-LAST:event_btnAgmActionPerformed

    private void btnBuscaLarguraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaLarguraActionPerformed
        carregar = new MeusAlgoritmos();
        Vertice valorVertice = new Vertice(cbLargura.getSelectedIndex());
        carregar.buscaEmLargura(grafo, valorVertice);
        String resultado = new String();
        resultado = "Busca em largura:\n\n";
        for (int i = 0; i < carregar.cor.length; i++) {

            resultado = resultado.concat("Vertice: " + i + " Pai: " + carregar.pai[i] + " Cor: " + carregar.cor[i] + " Distancia: " + carregar.distancia[i] + "\n");

        }

        txtArea.setText(resultado);

    }//GEN-LAST:event_btnBuscaLarguraActionPerformed

    private void cbLarguraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLarguraActionPerformed


    }//GEN-LAST:event_cbLarguraActionPerformed

    private void btnBuscaProfundidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaProfundidadeActionPerformed
        Vertice valorVertice = new Vertice(cbProfundidade.getSelectedIndex());
        carregar = new MeusAlgoritmos();
        carregar.buscaEmProfundidade(grafo, valorVertice);
        String resultado = new String();
        resultado = "Busca em profundidade:\n\nTempos: \n\n";
        for (int i = 0; i < carregar.tempoDescoberta.length; i++) {
            resultado = resultado.concat("Vértice: " + i + " Tempo descoberta: " + carregar.tempoDescoberta[i] + " Tempo finalização: " + carregar.tempoFinalizacao[i] + "\n");
        }
        resultado = resultado.concat("\nClassificação das arestas: \n\n");

        for (Aresta idVertice : carregar.floresta) {
            resultado = resultado.concat("Origem: " + idVertice.origem().id() + " Destino: " + idVertice.destino().id() + " Peso: " + idVertice.peso() + " Classificação: " + idVertice.getClassificacao() + "\n");
        }

        txtArea.setText(resultado);

    }//GEN-LAST:event_btnBuscaProfundidadeActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {

                    new Principal().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgm;
    private javax.swing.JButton btnBuscaLargura;
    private javax.swing.JButton btnBuscaProfundidade;
    private javax.swing.JButton btnCaminhoMinimo;
    private javax.swing.JButton btnCarregar;
    private javax.swing.JComboBox<String> cbCarregarGrafo;
    private javax.swing.JComboBox<String> cbDestinoCaminho;
    private javax.swing.JComboBox<String> cbLargura;
    private javax.swing.JComboBox<String> cbOrigemCaminho;
    private javax.swing.JComboBox<String> cbProfundidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtArea;
    // End of variables declaration//GEN-END:variables
}
